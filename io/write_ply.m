%% write_ply 
% Write mesh data to ply file

%% Syntax
%    write_ply(filename,face,vertex,color)

%% Description
%   'vertex' is a 'vert_number x 3' array specifying the position of the vertices.
%   'face' is a 'face_number x 3' array specifying the connectivity of the mesh.
%

%%   Example
%   write_ply('cube.ply',face,vertex);

%   Copyright 2014 Computational Geometry Group,  Mathematics Dept., CUHK
%   http://www.lokminglui.com/

function write_ply(filename,face,vertex,color)

fid = fopen(filename,'wt');
if( fid==-1 )
    error('Can''t open the file.');
    return;
end

nvert = size(vertex, 1);
nface = size(face, 1);
nvert_face = size(face, 2);


ncolor =0;
if nargin < 4
    color = [];
end
if ~isempty(color)
    ncolor = size(color, 1);
	if size(color, 2) < 3
		error('color matrix dimension must > 3');
	end
end

%write header
fprintf (fid, 'ply\n');
fprintf (fid, 'format ascii 1.0\n');
fprintf (fid, 'comment generated by geometric processing package\n');
fprintf (fid, 'element vertex %d\n',nvert);
fprintf (fid, 'property float x\n');
fprintf (fid, 'property float y\n');
fprintf (fid, 'property float z\n');
if ~isempty(color) && ncolor == nvert
    fprintf (fid, 'property red uchar\n');
	fprintf (fid, 'property green uchar\n');
	fprintf (fid, 'property blue uchar\n');
end
fprintf (fid, 'element face %d\n',nface);
fprintf (fid, 'property list uchar int vertex_indices\n');
if ~isempty(color) && ncolor == nface && ncolor ~= nvert
    fprintf (fid, 'property red uchar\n');
	fprintf (fid, 'property green uchar\n');
	fprintf (fid, 'property blue uchar\n');
end
fprintf (fid, 'end_header\n');

%write vertex
for i = 1:nvert
    fprintf (fid, '%.6f %.6f %.6f ',vertex(i,1), vertex(i,2), vertex(i,3));
    if nvert == ncolor 
        for j = 1:3
            fprintf (fid, '%d ',color(i,j)*255);
        end
    end
    fprintf (fid, '\n');
end

%write face
for i = 1:nface
    fprintf (fid, '%d ',nvert_face);
    for j = 1:nvert_face
        fprintf (fid, '%d ',face(i,j)-1);
    end
    if nface == ncolor & nvert ~= ncolor
        for j = 1:3
            fprintf (fid, '%d ',uint8(color(i,j)*255));
        end
    end
	fprintf (fid, '\n');
end

fclose(fid);


